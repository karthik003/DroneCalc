{"version":3,"sources":["logo.svg","Components/Input.js","Components/Landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","clickSubmit","submit","closeSubmit","hoverHandler","batteryable","weightable","currentable","maxcurrentable","motorsable","motordistanceable","propradiusable","twratioable","rotorsable","speedable","timeable","timeHandler","speedHandler","rangeHandler","battery","weight","current","maxcurrent","motors","motordistance","propradius","twratio","rotors","speed","time","this","className","style","width","backgroundColor","selector","Button","variant","type","onClick","minWidth","display","id","textAlign","Form","onSubmit","Row","Col","Group","controlId","Label","Control","placeholder","onChange","disabled","margin","classNames","animationIn","animationOut","animationDuration","open","onClose","blockScroll","center","Component","Landing","borderRadius","size","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a731e78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button,Form,Row,Col } from 'react-bootstrap';\r\nimport './Input.css'\r\nimport ScrollIntoView from 'react-scroll-into-view'\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nclass Input extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             battery: '',\r\n             weight:'',\r\n             current:'',\r\n             maxcurrent:'',\r\n             motors:'',\r\n             motordistance:'',\r\n             propradius:'',\r\n             twratio:'',\r\n             rotors:'',\r\n             speed:'',\r\n             time:'',\r\n             submit:false,\r\n             batteryable:false,\r\n             weightable:false,\r\n             currentable:false,\r\n             maxcurrentable:false,\r\n             motorsable:false,\r\n             motordistanceable:false,\r\n             propradiusable:false,\r\n             twratioable:false,\r\n             rotorsable:false,\r\n             speedable:false,\r\n             timeable:false,   \r\n\r\n        }\r\n    }\r\n    changeHandler = e =>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    submitHandler=e=>{\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n       \r\n    }\r\n    clickSubmit =() =>{\r\n        this.setState({\r\n            submit:true\r\n        },console.log(\"Check Output Below\"))\r\n    }\r\n    closeSubmit =()=>{\r\n        this.setState({\r\n            submit:false\r\n        })\r\n    }\r\n    hoverHandler= () =>{\r\n        this.setState({\r\n            batteryable:false,\r\n            weightable:false,\r\n            currentable:false,\r\n            maxcurrentable:true,\r\n            motorsable:true,\r\n            motordistanceable:true,\r\n            propradiusable:true,\r\n            twratioable:true,\r\n            rotorsable:true,\r\n            speedable:true,\r\n            timeable:true,   \r\n        })\r\n    }\r\n    timeHandler =() =>{\r\n        this.setState({\r\n            batteryable:false,\r\n            weightable:true,\r\n            currentable:true,\r\n            maxcurrentable:false,\r\n            motorsable:false,\r\n            motordistanceable:true,\r\n            propradiusable:true,\r\n            twratioable:true,\r\n            rotorsable:true,\r\n            speedable:true,\r\n            timeable:true,   \r\n        })\r\n    }\r\n    speedHandler =()=>{\r\n        this.setState({\r\n            batteryable:true,\r\n            weightable:false,\r\n            currentable:true,\r\n            maxcurrentable:true,\r\n            motorsable:true,\r\n            motordistanceable:false,\r\n            propradiusable:false,\r\n            twratioable:false,\r\n            rotorsable:false,\r\n            speedable:true,\r\n            timeable:true,   \r\n        })\r\n    }\r\n    rangeHandler= () =>{\r\n        this.setState({\r\n            batteryable:true,\r\n            weightable:true,\r\n            currentable:true,\r\n            maxcurrentable:true,\r\n            motorsable:true,\r\n            motordistanceable:true,\r\n            propradiusable:true,\r\n            twratioable:true,\r\n            rotorsable:true,\r\n            speedable:false,\r\n            timeable:false,   \r\n        })\r\n    }\r\n    render() {\r\n        const{battery,weight,current,maxcurrent,motors,motordistance,propradius,twratio,rotors,speed,time,submit,\r\n            batteryable,weightable,timeable,speedable,rotorsable,twratioable,propradiusable,motordistanceable,motorsable\r\n        ,maxcurrentable,currentable}=this.state\r\n\r\n        return (\r\n            <>\r\n            <div className=\"jumbotron inpbutton\" style={{width:\"20%\",backgroundColor:\"white\"}}>\r\n            <ScrollIntoView selector=\"#allinputs\">\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.hoverHandler}  style={{minWidth:\"135px\",display:\"inline-block\"}}>Hover Flight Time</Button><br /><br />\r\n               \r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.timeHandler} style={{minWidth:\"135px\"}}>Minimum Flight Time</Button><br /><br />\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.speedHandler}  style={{minWidth:\"135px\"}}>Max Forward Flight Speed</Button><br /><br />\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.rangeHandler}  style={{minWidth:\"135px\"}}>Estimated Range</Button>\r\n         </ScrollIntoView> \r\n            </div>\r\n            <div id=\"allinputs\" className=\"jumbotron inpfield\" style={{textAlign:\"left\",width:\"80%\",backgroundColor:\"white\"}}>\r\n               \r\n            <Form onSubmit={this.submitHandler}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicbattery\">\r\n                            <Form.Label>Battery Capacity</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Battery Capacity\" name=\"battery\" value={battery} onChange={this.changeHandler} disabled={batteryable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicWeigth\">\r\n                            <Form.Label>All Up Weight</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"All Up Weight\" name=\"weight\" value={weight} onChange={this.changeHandler} disabled={weightable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicCurrent\">\r\n                            <Form.Label>Current to lift 1kg</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Current to lift 1kg\" name=\"current\" value={current} onChange={this.changeHandler} disabled={currentable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicMaxCurrent\">\r\n                            <Form.Label>Max Current drawn by 1 Motor</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Max Current drawn by 1 Motor\" name=\"maxcurrent\" value={maxcurrent} onChange={this.changeHandler} disabled={maxcurrentable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicMotors\">\r\n                            <Form.Label>No. of Motors</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"No. of Motors\" name=\"motors\" value={motors} onChange={this.changeHandler} disabled={motorsable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicMotorDist\">\r\n                            <Form.Label>Motor to Motor Distance</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Motor to Motor Distance\" name=\"motordistance\" value={motordistance} onChange={this.changeHandler} disabled={motordistanceable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicRadius\">\r\n                            <Form.Label>Radius of Propellor</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Radius of Propellor\" name=\"propradius\" value={propradius} onChange={this.changeHandler} disabled={propradiusable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicThrust\">\r\n                            <Form.Label>Thrust to Weight Ratio</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Thrust to Weight Ratio\"name=\"twratio\" value={twratio} onChange={this.changeHandler} disabled={twratioable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicRotors\">\r\n                            <Form.Label>No. Of Rotors</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"No. Of Rotors\" name=\"rotors\" value={rotors} onChange={this.changeHandler} disabled={rotorsable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicFlight\">\r\n                            <Form.Label>Max forward Flight Speed</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Max forward Flight Speed\" name=\"speed\" value={speed} onChange={this.changeHandler} disabled={speedable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicTime\">\r\n                            <Form.Label>Flight Time</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Flight Time\" name=\"time\" value={time} onChange={this.changeHandler} disabled={timeable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                    <div style={{margin:\"auto\",width:\"100%\",textAlign:'left'}}>\r\n                        <Button variant=\"success\" type=\"submit\" onClick={this.clickSubmit} style={{width:\"150px\"}} >\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                    <Modal classNames={{\r\n                                animationIn: 'customEnterAnimation',\r\n                                animationOut: 'customLeaveAnimation',\r\n                                }} animationDuration={1000}  open={submit} onClose={this.closeSubmit} blockScroll={false} center >\r\n                            <br />\r\n                            <h2 className=\"text\">Output ={5+98}</h2>\r\n                            \r\n                            </Modal>\r\n                </Form>\r\n            </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\nimport './Landing.css'\r\nimport { Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Input from './Input'\r\nimport ScrollIntoView from 'react-scroll-into-view'\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"landing\">\r\n                <ScrollIntoView selector=\"#input\">\r\n                    <Button className=\"calculate\" style={{borderRadius:\"25px\"}}size=\"lg\">Calculate</Button>\r\n                </ScrollIntoView>\r\n            </div>\r\n            <div style={{width:\"100%\"}} id=\"input\">\r\n                <p className=\"text\">CALCULATE</p>\r\n            <Input />\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Landing from './Components/Landing'\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Landing />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}