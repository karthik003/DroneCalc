{"version":3,"sources":["logo.svg","Components/Input.js","Components/Landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","battery","weight","current","display","maxcurrent","motors","motordistance","propradius","twratio","rotors","speed","time","propdiam","proppitch","forwardvel","motorrate","batteryvolt","motorstallcur","style","color","fontFamily","fontSize","textAlign","clickSubmit","submit","closeSubmit","hoverHandler","batteryable","weightable","currentable","maxcurrentable","motorsable","motordistanceable","propradiusable","twratioable","rotorsable","speedable","timeable","motorrateable","batteryvoltable","propdiamable","proppitchable","forwardvelable","motorstallcurable","timeHandler","speedHandler","rangeHandler","thrustHandler","rpmHandler","cRateHandler","this","className","width","backgroundColor","selector","Button","variant","type","onClick","minWidth","id","Form","onSubmit","Row","Col","Group","controlId","Label","Control","placeholder","onChange","disabled","margin","classNames","animationIn","animationOut","animationDuration","open","onClose","blockScroll","center","Component","Landing","borderRadius","size","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2b2d9203.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button,Form,Row,Col } from 'react-bootstrap';\r\nimport './Input.css'\r\nimport ScrollIntoView from 'react-scroll-into-view'\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nclass Input extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             battery: '',\r\n             weight:'',\r\n             current:'',\r\n             maxcurrent:'',\r\n             motors:'',\r\n             motordistance:'',\r\n             propradius:'',\r\n             twratio:'',\r\n             rotors:'',\r\n             speed:'',\r\n             time:'',\r\n             motorrate:'',\r\n             batteryvolt:'',\r\n             propdiam:'',\r\n             proppitch:'',\r\n             forwardvel:'',\r\n             motorstallcur:'',\r\n             submit:false,\r\n             batteryable:false,\r\n             weightable:false,\r\n             currentable:false,\r\n             maxcurrentable:false,\r\n             motorsable:false,\r\n             motordistanceable:false,\r\n             propradiusable:false,\r\n             twratioable:false,\r\n             rotorsable:false,\r\n             speedable:false,\r\n             timeable:false,\r\n             motorrateable:false,\r\n             batteryvoltable:false,\r\n             propdiamable:false,\r\n             proppitchable:false,\r\n             forwardvelable:false,\r\n             motorstallcurable:false,\r\n             display:' '\r\n\r\n        }\r\n    }\r\n    changeHandler = e =>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    submitHandler=e=>{\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n\r\n        if(this.state.battery!== '' && this.state.weight!=='' && this.state.current!==''){\r\n            this.setState({\r\n                display:(this.state.battery * 0.8 * 60)/(1000*this.state.weight*this.state.current) +\" min\"\r\n            })\r\n        }\r\n        else if(this.state.battery!== '' && this.state.maxcurrent!=='' && this.state.motors!==''){\r\n            this.setState({\r\n                display:(this.state.battery * 0.8 * 60)/(1000*this.state.maxcurrent*this.state.motors) +\" min\"\r\n            })\r\n        }\r\n        else if(this.state.weight!== '' && this.state.motordistance!=='' && this.state.propradius!==''&& this.state.twratio!==''&& this.state.rotors!==''){\r\n            this.setState({\r\n                display:((1-1/(this.state.twratio)**2)*(3.55* this.state.twratio)*((this.state.weight/(0.5*(this.state.motordistance**2) + (this.state.rotors -1)*(3.14*(this.state.propradius**2) )) )**0.5)) +\" m/s\"\r\n            })\r\n        }\r\n        else if (this.state.speed!== '' && this.state.time!==''){\r\n            this.setState({\r\n                display:this.state.speed*this.state.time*60 +\" m\"\r\n            })\r\n        }\r\n        else if( this.state.propdiam!== '' && this.state.proppitch!=='' && this.state.forwardvel!==''&& this.state.motorrate!==''&& this.state.batteryvolt!==''){\r\n            this.setState({\r\n                display: (4.392399* this.state.motorrate*this.state.batteryvolt)*(this.state.propdiam**3.5/this.state.proppitch**0.5)*((0.00042333*this.state.motorrate*this.state.batteryvolt*this.state.proppitch)- this.state.forwardvel)+ \" \"\r\n            })\r\n        }\r\n        else if (this.state.motorrate!== '' && this.state.batteryvolt!==''){\r\n            this.setState({\r\n                display:this.state.motorrate*this.state.batteryvolt +\" \"\r\n            })\r\n        }\r\n        else if (this.state.motorstallcur!== '' && this.state.battery!==''){\r\n            this.setState({\r\n                display:this.state.motorstallcur/this.state.battery +\" \"\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                display:<><p style={{color:\"red\",fontFamily:\"courier\",fontSize:\"26px\",textAlign:\"center\"}}>Error</p>\r\n                        <ul>\r\n                            <li style={{color:\"grey\",fontFamily:\"courier\",fontSize:\"20px\"}}><i>You probably didn't enter all the values.</i></li>\r\n                            <li style={{color:\"grey\" ,fontFamily:\"courier\",fontSize:\"20px\"}}><i>You didn't click on which of the given outputs you want.</i></li>\r\n                        </ul></>\r\n            })\r\n        }\r\n        \r\n    }\r\n    clickSubmit =() =>{\r\n        this.setState({\r\n            submit:true\r\n        },console.log(\"Check Output Below\"))\r\n    }\r\n    closeSubmit =()=>{\r\n        this.setState({\r\n            submit:false\r\n        })\r\n    }\r\n    hoverHandler= () =>{\r\n        this.setState({\r\n            batteryable:false,\r\n            weightable:false,\r\n            currentable:false,\r\n            maxcurrentable:true,\r\n            motorsable:true,\r\n            motordistanceable:true,\r\n            propradiusable:true,\r\n            twratioable:true,\r\n            rotorsable:true,\r\n            speedable:true,\r\n            timeable:true,\r\n            motorrateable:true,\r\n            batteryvoltable:true,\r\n            propdiamable:true,\r\n            proppitchable:true,\r\n            forwardvelable:true,\r\n            motorstallcurable:true,   \r\n        })\r\n    }\r\n    timeHandler =() =>{\r\n        this.setState({\r\n            batteryable:false,\r\n            weightable:true,\r\n            currentable:true,\r\n            maxcurrentable:false,\r\n            motorsable:false,\r\n            motordistanceable:true,\r\n            propradiusable:true,\r\n            twratioable:true,\r\n            rotorsable:true,\r\n            speedable:true,\r\n            timeable:true,\r\n            motorrateable:true,\r\n            batteryvoltable:true,\r\n            propdiamable:true,\r\n            proppitchable:true,\r\n            forwardvelable:true,\r\n            motorstallcurable:true,   \r\n        })\r\n    }\r\n    speedHandler =()=>{\r\n        this.setState({\r\n            batteryable:true,\r\n            weightable:false,\r\n            currentable:true,\r\n            maxcurrentable:true,\r\n            motorsable:true,\r\n            motordistanceable:false,\r\n            propradiusable:false,\r\n            twratioable:false,\r\n            rotorsable:false,\r\n            speedable:true,\r\n            timeable:true,\r\n            motorrateable:true,\r\n            batteryvoltable:true,\r\n            propdiamable:true,\r\n            proppitchable:true,\r\n            forwardvelable:true,\r\n            motorstallcurable:true,   \r\n        })\r\n    }\r\n    rangeHandler= () =>{\r\n        this.setState({\r\n            batteryable:true,\r\n            weightable:true,\r\n            currentable:true,\r\n            maxcurrentable:true,\r\n            motorsable:true,\r\n            motordistanceable:true,\r\n            propradiusable:true,\r\n            twratioable:true,\r\n            rotorsable:true,\r\n            speedable:false,\r\n            timeable:false,\r\n            motorrateable:true,\r\n            batteryvoltable:true,\r\n            propdiamable:true,\r\n            proppitchable:true,\r\n            forwardvelable:true,\r\n            motorstallcurable:true,   \r\n        })\r\n    }\r\n    thrustHandler =()=>{\r\n        this.setState({\r\n            batteryable:true,\r\n            weightable:true,\r\n            currentable:true,\r\n            maxcurrentable:true,\r\n            motorsable:true,\r\n            motordistanceable:true,\r\n            propradiusable:true,\r\n            twratioable:true,\r\n            rotorsable:true,\r\n            speedable:true,\r\n            timeable:true,\r\n            motorrateable:false,\r\n            batteryvoltable:false,\r\n            propdiamable:false,\r\n            proppitchable:false,\r\n            forwardvelable:false,\r\n            motorstallcurable:true,    \r\n        })\r\n    }\r\n    rpmHandler =()=>{\r\n        this.setState({\r\n            batteryable:true,\r\n            weightable:true,\r\n            currentable:true,\r\n            maxcurrentable:true,\r\n            motorsable:true,\r\n            motordistanceable:true,\r\n            propradiusable:true,\r\n            twratioable:true,\r\n            rotorsable:true,\r\n            speedable:true,\r\n            timeable:true,\r\n            motorrateable:false,\r\n            batteryvoltable:false,\r\n            propdiamable:true,\r\n            proppitchable:true,\r\n            forwardvelable:true,\r\n            motorstallcurable:true,  \r\n        })\r\n    }\r\n    cRateHandler =()=>{\r\n        this.setState({\r\n            batteryable:false,\r\n            weightable:true,\r\n            currentable:true,\r\n            maxcurrentable:true,\r\n            motorsable:true,\r\n            motordistanceable:true,\r\n            propradiusable:true,\r\n            twratioable:true,\r\n            rotorsable:true,\r\n            speedable:true,\r\n            timeable:true,\r\n            motorrateable:true,\r\n            batteryvoltable:true,\r\n            propdiamable:true,\r\n            proppitchable:true,\r\n            forwardvelable:true,\r\n            motorstallcurable:false,   \r\n        })\r\n    }\r\n    render() {\r\n        const{battery,weight,current,maxcurrent,motors,motordistance,propradius,twratio,rotors,speed,time,motorrate,batteryvolt,propdiam\r\n            ,proppitch,forwardvel,motorstallcur,submit,batteryable,weightable,timeable,speedable,rotorsable,twratioable,propradiusable,motordistanceable,motorsable\r\n        ,maxcurrentable,currentable,motorrateable,batteryvoltable,propdiamable,proppitchable,forwardvelable,motorstallcurable,display}=this.state\r\n\r\n        return (\r\n            <>\r\n            <div className=\"jumbotron inpbutton\" style={{width:\"20%\",backgroundColor:\"white\"}}>\r\n            <ScrollIntoView selector=\"#allinputs\">\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.hoverHandler}  style={{minWidth:\"135px\",display:\"inline-block\"}}>Hover Flight Time</Button><br /><br />\r\n               \r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.timeHandler} style={{minWidth:\"135px\"}}>Minimum Flight Time</Button><br /><br />\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.speedHandler}  style={{minWidth:\"135px\"}}>Max Forward Flight Speed</Button><br /><br />\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.rangeHandler}  style={{minWidth:\"135px\"}}>Estimated Range</Button><br /><br />\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.thrustHandler}  style={{minWidth:\"135px\"}}>Static/Dynamic Thrust</Button><br /><br />\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.rpmHandler}  style={{minWidth:\"135px\"}}>RPM</Button><br /><br />\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.cRateHandler}  style={{minWidth:\"135px\"}}>C-Rating of the battery</Button>\r\n\r\n         </ScrollIntoView> \r\n            </div>\r\n            <div id=\"allinputs\" className=\"jumbotron inpfield\" style={{textAlign:\"left\",width:\"80%\",backgroundColor:\"white\"}}>\r\n               \r\n            <Form onSubmit={this.submitHandler}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicbattery\">\r\n                            <Form.Label>Battery Capacity</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Battery Capacity\" name=\"battery\" value={battery} onChange={this.changeHandler} disabled={batteryable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicWeigth\">\r\n                            <Form.Label>All Up Weight</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"All Up Weight\" name=\"weight\" value={weight} onChange={this.changeHandler} disabled={weightable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicCurrent\">\r\n                            <Form.Label>Current to lift 1kg</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Current to lift 1kg\" name=\"current\" value={current} onChange={this.changeHandler} disabled={currentable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicMaxCurrent\">\r\n                            <Form.Label>Max Current drawn by 1 Motor</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Max Current drawn by 1 Motor\" name=\"maxcurrent\" value={maxcurrent} onChange={this.changeHandler} disabled={maxcurrentable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicMotors\">\r\n                            <Form.Label>No. of Motors</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"No. of Motors\" name=\"motors\" value={motors} onChange={this.changeHandler} disabled={motorsable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicMotorDist\">\r\n                            <Form.Label>Motor to Motor Distance</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Motor to Motor Distance\" name=\"motordistance\" value={motordistance} onChange={this.changeHandler} disabled={motordistanceable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicRadius\">\r\n                            <Form.Label>Radius of Propellor</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Radius of Propellor\" name=\"propradius\" value={propradius} onChange={this.changeHandler} disabled={propradiusable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicThrust\">\r\n                            <Form.Label>Thrust to Weight Ratio</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Thrust to Weight Ratio\"name=\"twratio\" value={twratio} onChange={this.changeHandler} disabled={twratioable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicRotors\">\r\n                            <Form.Label>No. Of Rotors</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"No. Of Rotors\" name=\"rotors\" value={rotors} onChange={this.changeHandler} disabled={rotorsable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicFlight\">\r\n                            <Form.Label>Max forward Flight Speed</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Max forward Flight Speed\" name=\"speed\" value={speed} onChange={this.changeHandler} disabled={speedable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicTime\">\r\n                            <Form.Label>Flight Time</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Flight Time\" name=\"time\" value={time} onChange={this.changeHandler} disabled={timeable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicmotorRate\">\r\n                            <Form.Label>Motor rating</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Motor rating\" name=\"motorrate\" value={motorrate} onChange={this.changeHandler} disabled={motorrateable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicbatteryvolt\">\r\n                            <Form.Label>Battery Voltage</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Battery Voltage\" name=\"batteryvolt\" value={batteryvolt} onChange={this.changeHandler} disabled={batteryvoltable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicpropdiam\">\r\n                            <Form.Label>Diameter of Propellor </Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Diameter of Propellor\" name=\"propdiam\" value={propdiam} onChange={this.changeHandler} disabled={propdiamable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicproppitch\">\r\n                            <Form.Label> Pitch of Propellor</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Pitch of Propellor\" name=\"proppitch\" value={proppitch} onChange={this.changeHandler} disabled={proppitchable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicForwardvel\">\r\n                            <Form.Label>Forward Velocity </Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Forward Velocity\" name=\"forwardvel\" value={forwardvel} onChange={this.changeHandler} disabled={forwardvelable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicmotorstallcur\">\r\n                            <Form.Label> Motor Stall Current</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Motor Stall Current\" name=\"motorstallcur\" value={motorstallcur} onChange={this.changeHandler} disabled={motorstallcurable}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                    <div style={{margin:\"auto\",width:\"100%\",textAlign:'left'}}>\r\n                        <Button variant=\"success\" type=\"submit\" onClick={this.clickSubmit} style={{width:\"150px\"}} >\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                    <Modal classNames={{\r\n                                animationIn: 'customEnterAnimation',\r\n                                animationOut: 'customLeaveAnimation',\r\n                                }} animationDuration={1000}  open={submit} onClose={this.closeSubmit} blockScroll={false} center >\r\n                            <br />\r\n                            <h2 className=\"text\">Output ={display}</h2>\r\n                            \r\n                    </Modal>\r\n                </Form>\r\n            </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\nimport './Landing.css'\r\nimport { Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Input from './Input'\r\nimport ScrollIntoView from 'react-scroll-into-view'\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"landing\">\r\n                <ScrollIntoView selector=\"#input\">\r\n                    <Button className=\"calculate\" style={{borderRadius:\"25px\"}}size=\"lg\">Calculate</Button>\r\n                </ScrollIntoView>\r\n            </div>\r\n            <div style={{width:\"100%\"}} id=\"input\">\r\n                <p className=\"text\">CALCULATE</p>\r\n            <Input />\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Landing from './Components/Landing'\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Landing />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}